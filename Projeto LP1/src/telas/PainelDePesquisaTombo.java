package telas;

import estruturas.Arte;
import estruturas.Persistencia;
import java.awt.Dimension;
import java.util.LinkedList;
import javax.swing.JOptionPane;
import static telas.PainelPrincipal.jTelaPrincipal;

/** Painel de Pesquisar Tombo
 *    Descrição:
 *      Esse pequeno painel serve para pesquisar o tombo de uma Obra de Arte
 *      do acervo para que possa ser editado.
 * 
 *    @author Grupo 06
 *      alunos: Armando Neto, Douglas Lima
 *              Drayton Corrêa, Ewerton Santos
 */
public class PainelDePesquisaTombo extends javax.swing.JInternalFrame {

    //Construtores:
     /** Construtor do Painel Principal:
      *    Descrição:
      *      Painel padrão da interface em conjunto com os métodos da
      *      persistência que copiam todos os objetos do arquivo Arte.ser
      *      para a coleção cad no aplicativo.
      */
    public PainelDePesquisaTombo() {
        p.setupLer();
        if (p.getContinua() == true) {
            p.readRecords();
            p.cleanupLer();
            cad = p.getCad();
        }
        initComponents();
        getRootPane().setDefaultButton(BotaoContinuar);
    }

    //Métodos:
     /** Método de Testar se Existe na Lista
      *    Descrição:
      *      O método percorre a coleção e checa se existe o tombo enviado
      *      no parâmetro.     * 
      */
    private boolean existeNaLista(int tomb) {
        for (Arte a : cad) {
            if (a.getTombo() == tomb) {
                return true;
            }
        }
        return false;
    }

    /** Método que Centraliza a Janela 
     *    Descrição: 
     *      O método pega o tamanho da tela principal e e cria a jenla no meio
     *      dela.
     */
    public void setPosicao() {
        Dimension d = jTelaPrincipal.getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtTombo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        BotaoContinuar = new javax.swing.JButton();
        BotaoCancelar = new javax.swing.JButton();

        setClosable(true);
        setTitle("Janela de Pesquisa");

        txtTombo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtTombo.setToolTipText("Digite o número de Tombo da Obra de Arte.");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Escreva abaixo o número de tombo da Obra que deseja editar:");

        BotaoContinuar.setText("Continuar");
        BotaoContinuar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotaoContinuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoContinuarActionPerformed(evt);
            }
        });

        BotaoCancelar.setText("Cancelar");
        BotaoCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotaoCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel1))
                    .addComponent(txtTombo, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BotaoContinuar)
                        .addGap(18, 18, 18)
                        .addComponent(BotaoCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 22, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotaoContinuar)
                    .addComponent(BotaoCancelar)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Botões:
     /** Botão de Continuar
      *    Descrição:
      *      Ao ser apertado, checa se o tombo digitado no campo de texto
      *      existe na coleção e, caso exista, abre um painel de edição.
      *      Caso o tombo não esteja registrado na coleção, ele informa
      *      isso ao usuário assim como se houver algo incorreto naquilo
      *      que foi digitado no campo. 
      */
    private void BotaoContinuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoContinuarActionPerformed
        boolean errado = true;

        while (errado) {
            if (errado == true) {
                try {
                    int tombo;

                    tombo = Integer.parseInt(txtTombo.getText());

                    if (existeNaLista(tombo)) {
                        this.dispose();
                        PainelDeRegistro painelE = new PainelDeRegistro(tombo);
                        painelE.setTitle("Editar Obra de Arte");
                        jTelaPrincipal.add(painelE);
                        painelE.setPosicao();
                        painelE.setVisible(true);
                        break;
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Tombo não Encontrado.", "Aviso", JOptionPane.ERROR_MESSAGE);
                    }

                } catch (NumberFormatException n) {
                    JOptionPane.showMessageDialog(rootPane, "Caractere digitado Inválido.", "Aviso", JOptionPane.ERROR_MESSAGE);
                }
                errado = false;
            }
        }
    }//GEN-LAST:event_BotaoContinuarActionPerformed

    /**
     * Botão Cancelar: Descrição: Fecha a janela de pesquisa do tombo ao ser
     * apertado.
     */
    private void BotaoCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_BotaoCancelarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotaoCancelar;
    private javax.swing.JButton BotaoContinuar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtTombo;
    // End of variables declaration//GEN-END:variables
    // Outros Atributos:
    private static LinkedList<Arte> cad = new LinkedList<Arte>();
    private static Persistencia p = new Persistencia();
    // Fim dos outros Atributos;
}
